{"version":3,"file":"static/js/643.d7019333.chunk.js","mappings":"qMAOA,MAmEA,EAnEmBA,KACjB,MAAOC,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACtCC,EAAgBC,IAAqBF,EAAAA,EAAAA,WAAS,IAC9CG,EAAkBC,IAAuBJ,EAAAA,EAAAA,UAAS,MAClDK,EAAiBC,IAAsBN,EAAAA,EAAAA,WAAS,IACjD,aAAEO,EAAY,WAAEC,EAAU,QAAEC,IAAYC,EAAAA,EAAAA,MAC9CC,EAAAA,EAAAA,YAAU,KACRC,EAAUT,GAAkB,EAAM,GAEjC,IACH,MAAMS,EAAY,WAChBV,IADmDW,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,IAEnDN,EAAa,EAAGJ,GACba,KAAKC,GACLD,MAAK,IAAMR,EAAW,cAC3B,EACMS,EAAkBC,IAClBA,EAAOC,OAAS,GAClBb,GAAmB,GAErBJ,GAAkB,GAClBH,GAAeD,GAAe,IAAIA,KAAeoB,KACjDd,GAAqBD,GAAqBA,EAAmB,GAAE,EAE3DiB,EAAeC,IACnB,MAAMC,GACJC,EAAAA,EAAAA,KAACC,EAAAA,EAAe,CAACC,UAAW,KAAKC,SAC9BL,EAAIM,KAAI,CAACC,EAAOC,KACf,MAAM,MAAEC,EAAK,UAAEC,EAAS,MAAEC,EAAK,GAAEC,GAAOL,EACxC,OACEL,EAAAA,EAAAA,KAACW,EAAAA,EAAa,CAAUC,QAAS,IAAKC,WAAW,OAAMV,UACrDH,EAAAA,EAAAA,KAAA,MAAIc,UAAU,eAAcX,UAC1BY,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaR,GAAKP,SAAA,EACxBH,EAAAA,EAAAA,KAAA,OACEmB,IAAKX,EACLY,IAAKb,EACLO,UAAU,sBAEZd,EAAAA,EAAAA,KAAA,OAAKc,UAAU,oBAAmBX,SAAEI,KACpCP,EAAAA,EAAAA,KAAA,OAAKc,UAAU,qBAAoBX,SAAEM,QARPH,IADhBI,EAYJ,MAMxB,OAAOV,EAAAA,EAAAA,KAAA,MAAIc,UAAU,eAAcX,SAAEJ,GAAW,EAGlD,OACEgB,EAAAA,EAAAA,MAAA,OAAKD,UAAU,eAAcX,SAAA,EAC1BkB,EAAAA,EAAAA,GAAWnC,GAAS,IAAMW,EAAYtB,KACtCsB,EAAYtB,IACbyB,EAAAA,EAAAA,KAAA,UACEc,UAAU,mCACVQ,QAASjC,EACTkC,SAAU7C,EACV8C,MAAO,CAAEC,QAAS3C,EAAkB,OAAS,SAAUqB,UAEvDH,EAAAA,EAAAA,KAAA,OAAKc,UAAU,QAAOX,SAAC,kBAErB,E,cCpEV,MASA,EATmBuB,KAEfX,EAAAA,EAAAA,MAAAY,EAAAA,SAAA,CAAAxB,SAAA,EACEH,EAAAA,EAAAA,KAAC4B,EAAAA,EAAS,KACV5B,EAAAA,EAAAA,KAAC1B,EAAU,M","sources":["components/comicsList/ComicsList.js","components/pages/ComicPage.js"],"sourcesContent":["import \"./comicsList.scss\";\r\nimport useMarvelService from \"../../services/marvelService\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport setContent from \"../../utils/setContent\";\r\n\r\nconst ComicsList = () => {\r\n  const [comicsList, setComicsList] = useState([]);\r\n  const [newItemLoading, setNewItemLoading] = useState(false);\r\n  const [comicsListOffset, setComicsListOffset] = useState(100);\r\n  const [comicsListEnded, setComicsListEnded] = useState(false);\r\n  const { getAllComics, setProcess, process } = useMarvelService();\r\n  useEffect(() => {\r\n    onRequest(comicsListOffset, false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  const onRequest = (offset = comicsListOffset, initial = true) => {\r\n    setNewItemLoading(initial);\r\n    getAllComics(8, comicsListOffset)\r\n      .then(onComicsLoaded)\r\n      .then(() => setProcess(\"confirmed\"));\r\n  };\r\n  const onComicsLoaded = (comics) => {\r\n    if (comics.lenght < 8) {\r\n      setComicsListEnded(true);\r\n    }\r\n    setNewItemLoading(false);\r\n    setComicsList((comicsList) => [...comicsList, ...comics]);\r\n    setComicsListOffset((comicsListOffset) => comicsListOffset + 8);\r\n  };\r\n  const renderItems = (arr) => {\r\n    const items = (\r\n      <TransitionGroup component={null}>\r\n        {arr.map((comic, i) => {\r\n          const { title, thumbnail, price, id } = comic;\r\n          return (\r\n            <CSSTransition key={id} timeout={500} classNames=\"item\">\r\n              <li className=\"comics__item\" key={i}>\r\n                <Link to={`/comics/${id}`}>\r\n                  <img\r\n                    src={thumbnail}\r\n                    alt={title}\r\n                    className=\"comics__item-img\"\r\n                  />\r\n                  <div className=\"comics__item-name\">{title}</div>\r\n                  <div className=\"comics__item-price\">{price}</div>\r\n                </Link>\r\n              </li>\r\n            </CSSTransition>\r\n          );\r\n        })}\r\n      </TransitionGroup>\r\n    );\r\n\r\n    return <ul className=\"comics__grid\">{items}</ul>;\r\n  };\r\n\r\n  return (\r\n    <div className=\"comics__list\">\r\n      {setContent(process, () => renderItems(comicsList))}\r\n      {renderItems(comicsList)}\r\n      <button\r\n        className=\"button button__main button__long\"\r\n        onClick={onRequest}\r\n        disabled={newItemLoading}\r\n        style={{ display: comicsListEnded ? \"none\" : \"block\" }}\r\n      >\r\n        <div className=\"inner\">load more</div>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComicsList;\r\n","import ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nconst ComicsPage = () => {\r\n  return (\r\n    <>\r\n      <AppBanner />\r\n      <ComicsList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ComicsPage;\r\n"],"names":["ComicsList","comicsList","setComicsList","useState","newItemLoading","setNewItemLoading","comicsListOffset","setComicsListOffset","comicsListEnded","setComicsListEnded","getAllComics","setProcess","process","useMarvelService","useEffect","onRequest","arguments","length","undefined","then","onComicsLoaded","comics","lenght","renderItems","arr","items","_jsx","TransitionGroup","component","children","map","comic","i","title","thumbnail","price","id","CSSTransition","timeout","classNames","className","_jsxs","Link","to","concat","src","alt","setContent","onClick","disabled","style","display","ComicsPage","_Fragment","AppBanner"],"sourceRoot":""}